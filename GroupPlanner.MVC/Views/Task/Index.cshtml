@using GroupPlanner.Domain.Entities
@using GroupPlanner.MVC.Extensions
@using GroupPlanner.Application.Task
@model IEnumerable<GroupPlanner.Application.Task.TaskDto>

@{
    ViewData["Title"] = "Tasks";
}

<div class="d-flex align-items-center justify-content-between mb-4">
    <div class="d-flex align-items-center">
        <i class="bi bi-list-task display-4 text-primary me-3"></i>
        <div>
            <h1 class="h3 mb-0">My Tasks</h1>
            <small class="text-muted">Here’s what you need to work on</small>
        </div>
    </div>
    <a asp-action="Create" class="btn btn-success">
        <i class="bi bi-plus-lg me-1"></i>
        Create New Task
    </a>
</div>

<div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
    @foreach (var item in Model)
    {
        var prioClass = item.Priority switch
        {
            TaskPriority.Critical => "bg-danger text-white",  // czerwony
            TaskPriority.High => "bg-warning text-dark",  // żółty
            TaskPriority.Medium => "bg-primary text-white", // niebieski
            TaskPriority.Low => "bg-secondary",          // szary
            _ => "bg-secondary"
        };

        var progressClass = item.ProgressStatus switch
        {
            ProgressStatus.Completed => "bg-success text-white",        // zielony
            ProgressStatus.InProgress => "bg-info text-dark",           // niebieski
            ProgressStatus.NotStarted => "bg-light text-dark border",   // jasne z ramką
            _ => "bg-secondary"
        };

        var typeClass = item.TaskType switch
        {
            TaskType.Project => "bg-primary text-white",
            TaskType.Task => "bg-secondary",
            TaskType.AdditionalTask => "bg-warning text-dark",
            TaskType.Other => "bg-dark text-white",
            _ => "bg-secondary"
        };

        <div class="col">
            <div class="card h-100 shadow-sm">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title text-truncate">@item.Name</h5>
                    @if (item.Deadline.HasValue)
                    {
                        <h6 class="card-subtitle mb-2 text-muted">
                            @item.Deadline.Value.ToString("yyyy-MM-dd")
                        </h6>
                    }
                    <p class="card-text flex-grow-1 text-truncate-2">@item.Description</p>

                    <div class="mb-3">
                        <span class="badge @typeClass me-1">
                            @item.TaskType.GetDisplayName()
                        </span>
                        <span class="badge @prioClass me-1">
                            @item.Priority.GetDisplayName()
                        </span>
                        <span class="badge @progressClass me-1">
                            @item.ProgressStatus.GetDisplayName()
                        </span>
                    </div>

                    <div class="mt-auto d-flex gap-2">
                        <a class="btn btn-outline-primary btn-sm"
                           asp-controller="Task"
                           asp-action="Details"
                           asp-route-encodedName="@item.EncodedName">
                            <i class="bi bi-eye-fill me-1"></i>
                            Details
                        </a>
                        <a class="btn btn-outline-secondary btn-sm"
                           asp-controller="Task"
                           asp-action="Edit"
                           asp-route-encodedName="@item.EncodedName">
                            <i class="bi bi-pencil-fill me-1"></i>
                            Edit
                        </a>

                        <form asp-controller="Task"
                              asp-action="DeleteConfirmed"
                              asp-route-encodedName="@item.EncodedName"
                              method="post"
                              onsubmit="return confirm('Are you sure you want to delete this task?');"
                              style="display:inline;">
                            <button type="submit" class="btn btn-outline-danger btn-sm">
                                <i class="bi bi-trash-fill me-1"></i> Delete
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<style>
    .text-truncate-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
</style>
